buildscript {
    repositories {
        jcenter()
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'java-library'

version = "2.4.5"
group = "com.github.fnar"
archivesBaseName = "RoguelikeCore"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    /**
        2023-09-15, @fnar
        Currently as a stopgap, the versions of the dependencies in this module (roguelike-core)
        are set to match the versions of dependencies in the module 1.12. This won't work when
        we formally introduce higher level forge-dependent projects, like 1.14 and up.

        We need to find a way to keep the dependency version separate between the projects.
    **/
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.google.guava:guava:21.0'
    implementation 'commons-io:commons-io:2.5'
    implementation 'org.apache.commons:commons-lang3:3.5'
    implementation 'org.apache.logging.log4j:log4j-api:2.8.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.8.1'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompile "junit:junit:4.11"

    testCompile "org.mockito:mockito-core:1.+"
    testCompile("org.assertj:assertj-core:3.11.1")
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs)
}
